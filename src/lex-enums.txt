  // Keywords go between LX_KEYWORD_BEGIN/END
  ENUM(LX_KEYWORD_BEGIN),
  ENUM(LX_AND_KW),        // "and"
  ENUM(LX_DO_KW),         // "do"
  ENUM(LX_ELSE_KW),       // "else"
  ENUM(LX_END_KW),        // "end"
  ENUM(LX_IF_KW),         // "if"
  ENUM(LX_INIT_KW),       // "init"
  ENUM(LX_MODULE_KW),     // "module"
  ENUM(LX_NOT_KW),        // "not"
  ENUM(LX_OR_KW),         // "or"
  ENUM(LX_PRINT_CHAR_KW), // "print_char"
  ENUM(LX_PRINT_INT_KW),  // "print_int"
  ENUM(LX_SPAWN_KW),      // "spawn"
  ENUM(LX_STOP_KW),       // "stop"
  ENUM(LX_TASK_KW),       // "task"
  ENUM(LX_THEN_KW),       // "then"
  ENUM(LX_WHILE_KW),      // "while"
  ENUM(LX_KEYWORD_END),
  // Symbols (things which aren't numbers, characters, keywords, identifiers or EOF)
  // go between LX_SYMBOL_BEGIN/END
  ENUM(LX_SYMBOL_BEGIN),
  ENUM(LX_ASSIGN_SYM),    // ":="
  ENUM(LX_EQ_SYM),        // "="
  ENUM(LX_NE_SYM),        // "!="
  ENUM(LX_GE_SYM),        // ">="
  ENUM(LX_GT_SYM),        // ">"
  ENUM(LX_LT_SYM),        // "<"
  ENUM(LX_LE_SYM),        // "<="
  ENUM(LX_LPAREN_SYM),    // "("
  ENUM(LX_RPAREN_SYM),    // ")"
  ENUM(LX_PLUS_SYM),      // "+"
  ENUM(LX_MINUS_SYM),     // "-'
  ENUM(LX_TIMES_SYM),     // "*"
  ENUM(LX_DIVIDE_SYM),    // "/"
  ENUM(LX_SEMICOLON_SYM), // ";"
  ENUM(LX_SYMBOL_END),
  ENUM(LX_CHAR),          // 'c' or '\xx'
  ENUM(LX_NUMBER),        // digit+
  ENUM(LX_EOF),
  ENUM(LX_IDENTIFIER),    // case insensitive
  ENUM(LX_ERROR)
